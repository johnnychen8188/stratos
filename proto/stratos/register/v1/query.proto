syntax = "proto3";
package stratos.register.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "stratos/register/v1/register.proto";

option go_package = "github.com/stratosnet/stratos-chain/x/register/types";

// Query defines the gRPC querier service.
service Query {
  // ResourceNode queries ResourceNode info for given ResourceNode address.
  rpc ResourceNode(QueryResourceNodeRequest) returns (QueryResourceNodeResponse) {
    option (google.api.http).get = "/stratos/register/v1/resource-nodes/{network_addr}";
  }

  // IndexingNode queries IndexingNode info for given IndexingNode address.
  rpc IndexingNode(QueryIndexingNodeRequest) returns (QueryIndexingNodeResponse) {
    option (google.api.http).get = "/stratos/register/v1/indexing-nodes/{network_addr}";
  }

//  // Owner queries all staking info for given Owner address.
//  rpc Owner(QueryOwnerRequest) returns (QueryOwnerResponse) {
//    option (google.api.http).get = "/stratos/register/v1/owner/{owner_addr}";
//  }
}

// QueryResourceNodeRequest is request type for the Query/ResourceNode RPC method
message QueryResourceNodeRequest {
  // network_addr defines the node address to query for.
  string network_addr = 1;
}

// QueryResourceNodeResponse is response type for the Query/ResourceNode RPC method
message QueryResourceNodeResponse {
  // node defines the the resourceNode info.
  ResourceNode node = 1 [(gogoproto.nullable) = false];
}

// QueryIndexingNodeRequest is request type for the Query/IndexingNode RPC method
message QueryIndexingNodeRequest {
  // network_addr defines the node address to query for.
  string network_addr = 1;
}

// QueryIndexingNodeResponse is response type for the Query/IndexingNode RPC method
message QueryIndexingNodeResponse {
  // node defines the the indexing info.
  IndexingNode node = 1 [(gogoproto.nullable) = false];
}

//// QueryOwnerRequest is request type for the Query/Owner RPC method
//message QueryOwnerRequest {
//  // owner_addr defines the owner address to query for.
//  string owner_addr = 1;
//}
//
//// QueryOwnerResponse is response type for the Query/Owner RPC method
//message QueryOwnerResponse {
//  // owner defines the the owner info.
//   string owner = 1 [(gogoproto.nullable) = true];
//  // pagination defines an optional pagination for the request.
//  cosmos.base.query.v1beta1.PageRequest pagination = 2;
//}
//
//// QueryParamsRequest is request type for the Query/Params RPC method.
//message QueryParamsRequest {}
//
//// QueryParamsResponse is response type for the Query/Params RPC method.
//message QueryParamsResponse {
//  // params holds all the parameters of this module.
//  Params params = 1 [(gogoproto.nullable) = false];
//}




